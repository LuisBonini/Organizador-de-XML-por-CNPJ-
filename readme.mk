# üöÄ Organizador Fiscal de XMLs

Uma aplica√ß√£o de desktop (feita em Python e Streamlit) que processa lotes de arquivos XML de NF-e, organiza os dados por CNPJ e gera relat√≥rios gerenciais detalhados em Excel automaticamente.

Este projeto foi criado para automatizar a tediosa tarefa de consolida√ß√£o fiscal para empresas ou escrit√≥rios de contabilidade que gerenciam m√∫ltiplos CNPJs, transformando um trabalho de horas em segundos.

![GIF da Aplica√ß√£o](httpsData/app-demo.gif)
*(Dica: Grave um GIF curto da tela do Streamlit e coloque aqui. √â muito profissional!)*

---

## ‚ú® Features (Funcionalidades)

* **Interface Gr√°fica Amig√°vel:** Constru√≠do com Streamlit para ser uma aplica√ß√£o web local f√°cil de usar.
* **Gerenciamento Multi-CNPJ:** Permite cadastrar m√∫ltiplos CNPJs (matriz e filiais) e processa os XMLs de forma inteligente, separando os relat√≥rios.
* **Cadastro de CNPJs:** Uma tela de configura√ß√£o permite ao usu√°rio adicionar ou remover CNPJs sem precisar mexer no c√≥digo (salvos em `cnpjs_config.json`).
* **Relat√≥rios Detalhados:** Gera arquivos Excel com 6 abas, incluindo:
    * Resumo de Vendas por Cliente
    * Resumo de Compras por Fornecedor
    * Listagem de Notas de Sa√≠da (1 linha por nota)
    * Listagem de Notas de Entrada (1 linha por nota)
    * Detalhe de Itens de Sa√≠da (1 linha por item)
    * Detalhe de Itens de Entrada (1 linha por item)
* **Download em .ZIP:** Se o processamento gerar relat√≥rios para mais de um CNPJ, a aplica√ß√£o os compacta automaticamente em um √∫nico arquivo `.zip`.
* **Formata√ß√£o Autom√°tica:** Os arquivos Excel gerados t√™m formata√ß√£o (Arial 10) e ajuste autom√°tico da largura das colunas.

## üõ†Ô∏è Tecnologias Utilizadas

* **Python 3.10+**
* **Streamlit:** Para a cria√ß√£o da interface gr√°fica (GUI).
* **Pandas:** Para manipula√ß√£o e agrega√ß√£o dos dados.
* **XlsxWriter:** Para a cria√ß√£o e formata√ß√£o dos arquivos Excel.
* **Poetry:** Para gerenciamento de depend√™ncias e do ambiente virtual.
* **PyInstaller:** Para compilar o projeto em um arquivo execut√°vel (`.exe`) para distribui√ß√£o no Windows.

---

## üöÄ Como Usar (Para Usu√°rios)

Para usu√°rios que n√£o s√£o desenvolvedores, uma vers√£o compilada (`.exe`) est√° dispon√≠vel [link para a p√°gina de Releases, se voc√™ criar uma].

Basta baixar a pasta, seguir as instru√ß√µes do `leia-me.txt` (basicamente, cadastrar os CNPJs no arquivo `cnpjs_config.json` e clicar no `.exe`).

## üíª Como Rodar (Para Desenvolvedores)

Se voc√™ quiser rodar o projeto a partir do c√≥digo-fonte:

1.  **Clone o reposit√≥rio:**
    ```bash
    git clone [https://github.com/SEU-USUARIO/organizador-fiscal.git](https://github.com/SEU-USUARIO/organizador-fiscal.git)
    cd organizador-fiscal
    ```

2.  **Instale as depend√™ncias com Poetry:**
    ```bash
    poetry install
    ```

3.  **Execute a aplica√ß√£o Streamlit:**
    ```bash
    poetry run streamlit run app.py
    ```
    A aplica√ß√£o abrir√° automaticamente no seu navegador em `http://localhost:8501`.

## üì¶ Como Compilar (Gerar o `.exe`)

Para gerar o arquivo execut√°vel para distribui√ß√£o no Windows:

```bash
poetry run pyinstaller --onefile --windowed --add-data "app.py;." run.py
```
O `.exe` final estar√° na pasta `dist/`.